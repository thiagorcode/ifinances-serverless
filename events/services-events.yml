AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Stack of events

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  # EventsTransactionsTableName:
  #   Type: String
  EventsImportTransactionsTableName:
    Type: String
Globals:
  Function:
    Timeout: 15
    Tracing: Active
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    Layers:
      - !Ref RuntimeDependenciesLayer
  Api:
    TracingEnabled: true

Resources:
  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile 
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Retain

  ProcessEventsFunction:
    Type: AWS::Serverless::Function 
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/processEvents.handler
      FunctionName:
        Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - process
      Role: !GetAtt EventsFunctionRole.Arn
      Environment:
        Variables:
          # EVENTS_TRANSACTIONS_TABLE_NAME: !Ref EventsTransactionsTableName
          EVENTS_IMPORT_TRANSACTIONS_TABLE_NAME: !Ref EventsImportTransactionsTableName

  EventsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to access DDB
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: EventsLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 
                - "dynamodb:*"
              Resource: 
                - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${EventsImportTransactionsTableName}
                - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${EventsImportTransactionsTableName}/*
          
            - Effect: Allow
              Action: 
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"

  EventsLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ProcessEventsFunction}
      RetentionInDays: 14