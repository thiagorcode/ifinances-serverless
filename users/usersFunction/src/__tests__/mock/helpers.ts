import { APIGatewayProxyEvent } from 'aws-lambda';

export function constructAPIGatewayEvent(body?: any, options: Record<string, any> = {}): APIGatewayProxyEvent {
  return {
    httpMethod: options.method || 'GET',
    body: options.rawBody || JSON.stringify(body),
    headers: options.headers || {},
    isBase64Encoded: false,
    multiValueHeaders: {},
    multiValueQueryStringParameters: options.query || {},
    path: options.path || '/',
    pathParameters: options.pathParameters || {},
    queryStringParameters: {},
    requestContext: options.requestContext || {
      accountId: '123456789012',
      apiId: '1234',
      authorizer: {},
      httpMethod: 'get',
      identity: {
        accessKey: '',
        accountId: '',
        apiKey: '',
        apiKeyId: '',
        caller: '',
        clientCert: {
          clientCertPem: '',
          issuerDN: '',
          serialNumber: '',
          subjectDN: '',
          validity: { notAfter: '', notBefore: '' },
        },
        cognitoAuthenticationProvider: '',
        cognitoAuthenticationType: '',
        cognitoIdentityId: '',
        cognitoIdentityPoolId: '',
        principalOrgId: '',
        sourceIp: '',
        user: '',
        userAgent: '',
        userArn: '',
      },
      path: '/users',
      protocol: 'HTTP/1.1',
      requestId: 'c6af9ac6-7b61-11e6-9a41-93e8deadbeef',
      requestTimeEpoch: 1428582896000,
      resource: options.resource || '',
      resourceId: '123456',
      resourcePath: '/users',
      stage: 'dev',
    },
    resource: '',
    stageVariables: options.stageVariables || {},
  };
}
