{
  "Resources": {
   "TransactionsStackNestedStackTransactionsStackNestedStackResourceCB35A549": {
    "Type": "AWS::CloudFormation::Stack",
    "Properties": {
     "TemplateURL": {
      "Fn::Join": [
       "",
       [
        "https://s3.sa-east-1.",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/cdk-hnb659fds-assets-735084759467-sa-east-1/163c3ec03da4b293d79daf483baab5a1ca610b5b0cae8f4c732f55d917bd4d8a.json"
       ]
      ]
     }
    },
    "UpdateReplacePolicy": "Delete",
    "DeletionPolicy": "Delete",
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/TransactionsStack.NestedStack/TransactionsStack.NestedStackResource",
     "aws:asset:path": "CombinedStackTransactionsStackC3455F87.nested.template.json",
     "aws:asset:property": "TemplateURL"
    }
   },
   "TransactionsDdbEF28B216": {
    "Type": "AWS::DynamoDB::Table",
    "Properties": {
     "KeySchema": [
      {
       "AttributeName": "id",
       "KeyType": "HASH"
      }
     ],
     "AttributeDefinitions": [
      {
       "AttributeName": "id",
       "AttributeType": "S"
      },
      {
       "AttributeName": "userId",
       "AttributeType": "S"
      },
      {
       "AttributeName": "date",
       "AttributeType": "S"
      }
     ],
     "GlobalSecondaryIndexes": [
      {
       "IndexName": "UserFindIndex",
       "KeySchema": [
        {
         "AttributeName": "userId",
         "KeyType": "HASH"
        },
        {
         "AttributeName": "date",
         "KeyType": "RANGE"
        }
       ],
       "Projection": {
        "ProjectionType": "ALL"
       },
       "ProvisionedThroughput": {
        "ReadCapacityUnits": 5,
        "WriteCapacityUnits": 5
       }
      }
     ],
     "ProvisionedThroughput": {
      "ReadCapacityUnits": 1,
      "WriteCapacityUnits": 1
     },
     "TableName": "finances-transactions"
    },
    "UpdateReplacePolicy": "Delete",
    "DeletionPolicy": "Delete",
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/TransactionsDdb/Resource"
    }
   },
   "createTransactionsFunctionHandlerServiceRole90C524D9": {
    "Type": "AWS::IAM::Role",
    "Properties": {
     "AssumeRolePolicyDocument": {
      "Statement": [
       {
        "Action": "sts:AssumeRole",
        "Effect": "Allow",
        "Principal": {
         "Service": "lambda.amazonaws.com"
        }
       }
      ],
      "Version": "2012-10-17"
     },
     "ManagedPolicyArns": [
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
       ]
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/createTransactionsFunctionHandler/ServiceRole/Resource"
    }
   },
   "createTransactionsFunctionHandlerServiceRoleDefaultPolicy3DC7CDA0": {
    "Type": "AWS::IAM::Policy",
    "Properties": {
     "PolicyDocument": {
      "Statement": [
       {
        "Action": [
         "sqs:GetQueueAttributes",
         "sqs:GetQueueUrl",
         "sqs:SendMessage"
        ],
        "Effect": "Allow",
        "Resource": {
         "Fn::GetAtt": [
          "TransactionsStackNestedStackTransactionsStackNestedStackResourceCB35A549",
          "Outputs.CombinedStackTransactionsStackSqsReportsTransactionsEDCF86C7Arn"
         ]
        }
       },
       {
        "Action": [
         "dynamodb:BatchWriteItem",
         "dynamodb:DeleteItem",
         "dynamodb:DescribeTable",
         "dynamodb:PutItem",
         "dynamodb:UpdateItem"
        ],
        "Effect": "Allow",
        "Resource": [
         {
          "Fn::GetAtt": [
           "TransactionsDdbEF28B216",
           "Arn"
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "TransactionsDdbEF28B216",
              "Arn"
             ]
            },
            "/index/*"
           ]
          ]
         }
        ]
       }
      ],
      "Version": "2012-10-17"
     },
     "PolicyName": "createTransactionsFunctionHandlerServiceRoleDefaultPolicy3DC7CDA0",
     "Roles": [
      {
       "Ref": "createTransactionsFunctionHandlerServiceRole90C524D9"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/createTransactionsFunctionHandler/ServiceRole/DefaultPolicy/Resource"
    }
   },
   "createTransactionsFunctionHandler367A0600": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
     "Code": {
      "S3Bucket": "cdk-hnb659fds-assets-735084759467-sa-east-1",
      "S3Key": "068689914be507bd57256158710ade253880e5115ec02fb6436cbdda8ca4a33a.zip"
     },
     "Role": {
      "Fn::GetAtt": [
       "createTransactionsFunctionHandlerServiceRole90C524D9",
       "Arn"
      ]
     },
     "Environment": {
      "Variables": {
       "TABLE_DDB": "finances-transactions",
       "REPORTS_TRANSACTIONS_QUEUE": {
        "Fn::GetAtt": [
         "TransactionsStackNestedStackTransactionsStackNestedStackResourceCB35A549",
         "Outputs.CombinedStackTransactionsStackSqsReportsTransactionsEDCF86C7Ref"
        ]
       },
       "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
      }
     },
     "FunctionName": "finances-transaction-create",
     "Handler": "index.handler",
     "MemorySize": 128,
     "Runtime": "nodejs16.x",
     "Timeout": 5
    },
    "DependsOn": [
     "createTransactionsFunctionHandlerServiceRoleDefaultPolicy3DC7CDA0",
     "createTransactionsFunctionHandlerServiceRole90C524D9"
    ],
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/createTransactionsFunctionHandler/Resource",
     "aws:asset:path": "asset.068689914be507bd57256158710ade253880e5115ec02fb6436cbdda8ca4a33a",
     "aws:asset:is-bundled": true,
     "aws:asset:property": "Code"
    }
   },
   "findTransactionFunctionHandlerServiceRoleF13CC924": {
    "Type": "AWS::IAM::Role",
    "Properties": {
     "AssumeRolePolicyDocument": {
      "Statement": [
       {
        "Action": "sts:AssumeRole",
        "Effect": "Allow",
        "Principal": {
         "Service": "lambda.amazonaws.com"
        }
       }
      ],
      "Version": "2012-10-17"
     },
     "ManagedPolicyArns": [
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
       ]
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findTransactionFunctionHandler/ServiceRole/Resource"
    }
   },
   "findTransactionFunctionHandlerServiceRoleDefaultPolicy0884034F": {
    "Type": "AWS::IAM::Policy",
    "Properties": {
     "PolicyDocument": {
      "Statement": [
       {
        "Action": [
         "dynamodb:BatchGetItem",
         "dynamodb:ConditionCheckItem",
         "dynamodb:DescribeTable",
         "dynamodb:GetItem",
         "dynamodb:GetRecords",
         "dynamodb:GetShardIterator",
         "dynamodb:Query",
         "dynamodb:Scan"
        ],
        "Effect": "Allow",
        "Resource": [
         {
          "Fn::GetAtt": [
           "TransactionsDdbEF28B216",
           "Arn"
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "TransactionsDdbEF28B216",
              "Arn"
             ]
            },
            "/index/*"
           ]
          ]
         }
        ]
       }
      ],
      "Version": "2012-10-17"
     },
     "PolicyName": "findTransactionFunctionHandlerServiceRoleDefaultPolicy0884034F",
     "Roles": [
      {
       "Ref": "findTransactionFunctionHandlerServiceRoleF13CC924"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findTransactionFunctionHandler/ServiceRole/DefaultPolicy/Resource"
    }
   },
   "findTransactionFunctionHandler291F8B08": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
     "Code": {
      "S3Bucket": "cdk-hnb659fds-assets-735084759467-sa-east-1",
      "S3Key": "44e367e683d5936891a4ffc4b9500678abf3e446dcdadd7741f8f08990fad07f.zip"
     },
     "Role": {
      "Fn::GetAtt": [
       "findTransactionFunctionHandlerServiceRoleF13CC924",
       "Arn"
      ]
     },
     "Environment": {
      "Variables": {
       "TABLE_DDB": "finances-transactions",
       "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
      }
     },
     "FunctionName": "finances-transaction-find",
     "Handler": "index.handler",
     "MemorySize": 128,
     "Runtime": "nodejs16.x",
     "Timeout": 5
    },
    "DependsOn": [
     "findTransactionFunctionHandlerServiceRoleDefaultPolicy0884034F",
     "findTransactionFunctionHandlerServiceRoleF13CC924"
    ],
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findTransactionFunctionHandler/Resource",
     "aws:asset:path": "asset.44e367e683d5936891a4ffc4b9500678abf3e446dcdadd7741f8f08990fad07f",
     "aws:asset:is-bundled": true,
     "aws:asset:property": "Code"
    }
   },
   "findAllWithQueryFunctionHandlerServiceRoleD05F08D3": {
    "Type": "AWS::IAM::Role",
    "Properties": {
     "AssumeRolePolicyDocument": {
      "Statement": [
       {
        "Action": "sts:AssumeRole",
        "Effect": "Allow",
        "Principal": {
         "Service": "lambda.amazonaws.com"
        }
       }
      ],
      "Version": "2012-10-17"
     },
     "ManagedPolicyArns": [
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
       ]
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findAllWithQueryFunctionHandler/ServiceRole/Resource"
    }
   },
   "findAllWithQueryFunctionHandlerServiceRoleDefaultPolicyED70B3CA": {
    "Type": "AWS::IAM::Policy",
    "Properties": {
     "PolicyDocument": {
      "Statement": [
       {
        "Action": [
         "dynamodb:BatchGetItem",
         "dynamodb:ConditionCheckItem",
         "dynamodb:DescribeTable",
         "dynamodb:GetItem",
         "dynamodb:GetRecords",
         "dynamodb:GetShardIterator",
         "dynamodb:Query",
         "dynamodb:Scan"
        ],
        "Effect": "Allow",
        "Resource": [
         {
          "Fn::GetAtt": [
           "TransactionsDdbEF28B216",
           "Arn"
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "TransactionsDdbEF28B216",
              "Arn"
             ]
            },
            "/index/*"
           ]
          ]
         }
        ]
       }
      ],
      "Version": "2012-10-17"
     },
     "PolicyName": "findAllWithQueryFunctionHandlerServiceRoleDefaultPolicyED70B3CA",
     "Roles": [
      {
       "Ref": "findAllWithQueryFunctionHandlerServiceRoleD05F08D3"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findAllWithQueryFunctionHandler/ServiceRole/DefaultPolicy/Resource"
    }
   },
   "findAllWithQueryFunctionHandler5E307CDC": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
     "Code": {
      "S3Bucket": "cdk-hnb659fds-assets-735084759467-sa-east-1",
      "S3Key": "2a744e2abd2d8787bce6352b3703deb4e944f6f89e4790a9cb04bede6265d4ad.zip"
     },
     "Role": {
      "Fn::GetAtt": [
       "findAllWithQueryFunctionHandlerServiceRoleD05F08D3",
       "Arn"
      ]
     },
     "Environment": {
      "Variables": {
       "TABLE_DDB": "finances-transactions",
       "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
      }
     },
     "FunctionName": "finances-transaction-find-all-query",
     "Handler": "index.handler",
     "MemorySize": 128,
     "Runtime": "nodejs16.x",
     "Timeout": 5
    },
    "DependsOn": [
     "findAllWithQueryFunctionHandlerServiceRoleDefaultPolicyED70B3CA",
     "findAllWithQueryFunctionHandlerServiceRoleD05F08D3"
    ],
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findAllWithQueryFunctionHandler/Resource",
     "aws:asset:path": "asset.2a744e2abd2d8787bce6352b3703deb4e944f6f89e4790a9cb04bede6265d4ad",
     "aws:asset:is-bundled": true,
     "aws:asset:property": "Code"
    }
   },
   "findLastFunctionHandlerServiceRoleFF7E7892": {
    "Type": "AWS::IAM::Role",
    "Properties": {
     "AssumeRolePolicyDocument": {
      "Statement": [
       {
        "Action": "sts:AssumeRole",
        "Effect": "Allow",
        "Principal": {
         "Service": "lambda.amazonaws.com"
        }
       }
      ],
      "Version": "2012-10-17"
     },
     "ManagedPolicyArns": [
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
       ]
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findLastFunctionHandler/ServiceRole/Resource"
    }
   },
   "findLastFunctionHandlerServiceRoleDefaultPolicy2C90741A": {
    "Type": "AWS::IAM::Policy",
    "Properties": {
     "PolicyDocument": {
      "Statement": [
       {
        "Action": [
         "dynamodb:BatchGetItem",
         "dynamodb:ConditionCheckItem",
         "dynamodb:DescribeTable",
         "dynamodb:GetItem",
         "dynamodb:GetRecords",
         "dynamodb:GetShardIterator",
         "dynamodb:Query",
         "dynamodb:Scan"
        ],
        "Effect": "Allow",
        "Resource": [
         {
          "Fn::GetAtt": [
           "TransactionsDdbEF28B216",
           "Arn"
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "TransactionsDdbEF28B216",
              "Arn"
             ]
            },
            "/index/*"
           ]
          ]
         }
        ]
       }
      ],
      "Version": "2012-10-17"
     },
     "PolicyName": "findLastFunctionHandlerServiceRoleDefaultPolicy2C90741A",
     "Roles": [
      {
       "Ref": "findLastFunctionHandlerServiceRoleFF7E7892"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findLastFunctionHandler/ServiceRole/DefaultPolicy/Resource"
    }
   },
   "findLastFunctionHandlerFA4262BC": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
     "Code": {
      "S3Bucket": "cdk-hnb659fds-assets-735084759467-sa-east-1",
      "S3Key": "a394cdfa9a7c622c60276125196a59ecd1dd6b616ef577df32b33c26b96e9e8b.zip"
     },
     "Role": {
      "Fn::GetAtt": [
       "findLastFunctionHandlerServiceRoleFF7E7892",
       "Arn"
      ]
     },
     "Environment": {
      "Variables": {
       "TABLE_DDB": "finances-transactions",
       "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
      }
     },
     "FunctionName": "finances-transaction-find-last",
     "Handler": "index.handler",
     "MemorySize": 128,
     "Runtime": "nodejs16.x",
     "Timeout": 5
    },
    "DependsOn": [
     "findLastFunctionHandlerServiceRoleDefaultPolicy2C90741A",
     "findLastFunctionHandlerServiceRoleFF7E7892"
    ],
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/findLastFunctionHandler/Resource",
     "aws:asset:path": "asset.a394cdfa9a7c622c60276125196a59ecd1dd6b616ef577df32b33c26b96e9e8b",
     "aws:asset:is-bundled": true,
     "aws:asset:property": "Code"
    }
   },
   "totalizersFunctionHandlerServiceRoleF4E4B6E2": {
    "Type": "AWS::IAM::Role",
    "Properties": {
     "AssumeRolePolicyDocument": {
      "Statement": [
       {
        "Action": "sts:AssumeRole",
        "Effect": "Allow",
        "Principal": {
         "Service": "lambda.amazonaws.com"
        }
       }
      ],
      "Version": "2012-10-17"
     },
     "ManagedPolicyArns": [
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
       ]
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/totalizersFunctionHandler/ServiceRole/Resource"
    }
   },
   "totalizersFunctionHandlerServiceRoleDefaultPolicy548E7295": {
    "Type": "AWS::IAM::Policy",
    "Properties": {
     "PolicyDocument": {
      "Statement": [
       {
        "Action": [
         "dynamodb:BatchGetItem",
         "dynamodb:ConditionCheckItem",
         "dynamodb:DescribeTable",
         "dynamodb:GetItem",
         "dynamodb:GetRecords",
         "dynamodb:GetShardIterator",
         "dynamodb:Query",
         "dynamodb:Scan"
        ],
        "Effect": "Allow",
        "Resource": [
         {
          "Fn::GetAtt": [
           "TransactionsDdbEF28B216",
           "Arn"
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "TransactionsDdbEF28B216",
              "Arn"
             ]
            },
            "/index/*"
           ]
          ]
         }
        ]
       }
      ],
      "Version": "2012-10-17"
     },
     "PolicyName": "totalizersFunctionHandlerServiceRoleDefaultPolicy548E7295",
     "Roles": [
      {
       "Ref": "totalizersFunctionHandlerServiceRoleF4E4B6E2"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/totalizersFunctionHandler/ServiceRole/DefaultPolicy/Resource"
    }
   },
   "totalizersFunctionHandler759EF6CB": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
     "Code": {
      "S3Bucket": "cdk-hnb659fds-assets-735084759467-sa-east-1",
      "S3Key": "dd67bd7f27b54f4413b1caf3771abfb6039571e520171755daaec0e6cb1dae2b.zip"
     },
     "Role": {
      "Fn::GetAtt": [
       "totalizersFunctionHandlerServiceRoleF4E4B6E2",
       "Arn"
      ]
     },
     "Environment": {
      "Variables": {
       "TABLE_DDB": "finances-transactions",
       "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
      }
     },
     "FunctionName": "finances-transaction-totalizers",
     "Handler": "index.handler",
     "MemorySize": 128,
     "Runtime": "nodejs16.x",
     "Timeout": 5
    },
    "DependsOn": [
     "totalizersFunctionHandlerServiceRoleDefaultPolicy548E7295",
     "totalizersFunctionHandlerServiceRoleF4E4B6E2"
    ],
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/totalizersFunctionHandler/Resource",
     "aws:asset:path": "asset.dd67bd7f27b54f4413b1caf3771abfb6039571e520171755daaec0e6cb1dae2b",
     "aws:asset:is-bundled": true,
     "aws:asset:property": "Code"
    }
   },
   "CDKMetadata": {
    "Type": "AWS::CDK::Metadata",
    "Properties": {
     "Analytics": "v2:deflate64:H4sIAAAAAAAA/zVPyw6CMBD8Fu9lFU3Qq5h4JAa9k6VdSXm0CVs0hPDvloKnmcnMzu4eITnDYYdfjqRqolaXMGXEjtTToWzE7W1W4hPFpEaDnVU+88KypcUNZBYtdqXCwlhFNUMW4D4Y6bQ1QmMHU27XgYAP22o5LnJls+BTgczkGK4LeA3pIBtyKTJt9eDz/9JZ5MR26CWJMOCvrLSpwobNmMVyDtS8/8QJxBf/Z81aR/1gnO4I8hV/mWLlMgMBAAA="
    },
    "Metadata": {
     "aws:cdk:path": "CombinedStack/TransactionsStack/CDKMetadata/Default"
    }
   }
  },
  "Outputs": {
   "CombinedStackTransactionsStackTransactionsStackNestedStackTransactionsStackNestedStackResourceE1BDC835OutputsCombinedStackTransactionsStackcreateReportsTransactionsMonthlyFunctionHandler03F75746Arn": {
    "Value": {
     "Fn::GetAtt": [
      "TransactionsStackNestedStackTransactionsStackNestedStackResourceCB35A549",
      "Outputs.CombinedStackTransactionsStackcreateReportsTransactionsMonthlyFunctionHandler03F75746Arn"
     ]
    }
   },
   "CombinedStackTransactionsStackcreateTransactionsFunctionHandlerA272387FArn": {
    "Value": {
     "Fn::GetAtt": [
      "createTransactionsFunctionHandler367A0600",
      "Arn"
     ]
    }
   },
   "CombinedStackTransactionsStackfindTransactionFunctionHandlerBD6EE6E1Arn": {
    "Value": {
     "Fn::GetAtt": [
      "findTransactionFunctionHandler291F8B08",
      "Arn"
     ]
    }
   },
   "CombinedStackTransactionsStackfindAllWithQueryFunctionHandlerE20AA837Arn": {
    "Value": {
     "Fn::GetAtt": [
      "findAllWithQueryFunctionHandler5E307CDC",
      "Arn"
     ]
    }
   },
   "CombinedStackTransactionsStackfindLastFunctionHandler09D8A05FArn": {
    "Value": {
     "Fn::GetAtt": [
      "findLastFunctionHandlerFA4262BC",
      "Arn"
     ]
    }
   },
   "CombinedStackTransactionsStacktotalizersFunctionHandler4710814BArn": {
    "Value": {
     "Fn::GetAtt": [
      "totalizersFunctionHandler759EF6CB",
      "Arn"
     ]
    }
   }
  }
 }
 